#!/bin/bash
set -eu

JOB=docker
BIN=compose
SIGTERM_FOR=15
SIGKILL_FOR=5

RUN_DIR=/var/vcap/sys/run/docker
LOG_DIR=/var/vcap/sys/log/docker
DAT_DIR=/var/vcap/store/docker
JOB_DIR=/var/vcap/jobs/docker
PIDFILE=${RUN_DIR}/compose.pid
exec >>$LOG_DIR/compose.log 2>&1

export PATH="$PATH:/var/vcap/packages/docker/bin"
export DOCKER_HOST='unix:///var/vcap/sys/run/docker/docker.sock'

case $1 in
  start)
    echo "[$(date)] $BIN/$$: starting up..."
    mkdir -p $RUN_DIR $LOG_DIR

    (shopt -s nullglob
     for image in $(cat /var/vcap/jobs/*/docker-bosh-release-import/*.lst); do
       echo "loading $image into docker..."
       docker load <$image
     done
     docker images) 2>&1 | sed -e "s|^|[$(date)] $BIN/$$: |"

    echo "[$(date)] $BIN/$$: waiting for docker to become available..."
    n=300; ok=no
    while true; do
      if docker ps >/dev/null; then
        ok=yes
        break
      fi
      n=$(( n - 1 ))
      sleep 0.1
    done

    echo $$ > $PIDFILE
    if [[ $ok == "no" ]]; then
      echo "[$(date)] $BIN/$$: docker (at $DOCKER_HOST) did not become available within 30s; bailing out."
      rm -f $PIDFILE
      exit 1
    fi

    cd $JOB_DIR/etc/running
    exec docker-compose up --remove-orphans
    ;;

  stop)
    echo "[$(date)] $BIN/$$: shutting down..."
    if [[ -f $PIDFILE ]]; then
      PID=$(head -1 $PIDFILE)
      if [[ -n "$PID" ]]; then
        if [[ -e /proc/$PID ]]; then
          echo "[$(date)] $BIN/$$: found pid file $PIDFILE, with pid '$PID' (which is running)"
          echo "[$(date)] $BIN/$$: sending SIGTERM for ${SIGTERM_FOR}s, followed by a SIGKILL..."
          for i in $(seq 1 $(expr $SIGTERM_FOR \* 10)); do
            kill -TERM $PID || true
            if [[ ! -e /proc/$PID ]]; then
              echo "[$(date)] $BIN/$$: pid $PID terminated (via SIGTERM)"
              rm -f $PIDFILE
              echo "[$(date)] $BIN/$$: shut down complete"
              exit 0
            fi
            sleep 0.1
          done

          echo "[$(date)] $BIN/$$: pid $PID did not termiante (via SIGTERM) within ${SIGTERM_FOR}s; sending a SIGKILL and waiting ${SIGKILL_FOR}s..."
          for i in $(seq 1 $(expr $SIGKILL_FOR \* 10)); do
            kill -KILL $PID || true
            if [[ ! -e /proc/$PID ]]; then
              echo "[$(date)] $BIN/$$: pid $PID terminated (via SIGKILL)"
              rm -f $PIDFILE
              echo "[$(date)] $BIN/$$: shut down complete"
              exit 0
            fi
            sleep 0.1
          done
          echo "[$(date)] $BIN/$$: pid $PID did not termiante (via SIGKILL) within ${SIGKILL_FOR}s; giving up."
          exit 1
        fi

        echo "[$(date)] $BIN/$$: found (stale) pid file $PIDFILE, with pid '$PID' (which is defunct)"
      fi
      rm -f $PIDFILE
    fi

    echo "[$(date)] $BIN/$$: docker-compose process(es) shut down; cleaning up any remaining containers..."
    cd $JOB_DIR/etc/running
    docker-compose down

    echo "[$(date)] $BIN/$$: shut down complete"
    exit 0
    ;;

  *)
    echo "Usage: ctl {start|stop}"
    exit 1
    ;;
esac
exit 0
